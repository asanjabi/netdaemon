using System.Reflection;

using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

namespace NetDaemon.HassModel.CodeGenerator.Helpers;
internal static class TriviaHelper
{
    internal static string GeneratorVersion = Assembly.GetAssembly(typeof(Generator))!.GetName().Version!.ToString();
    internal static SyntaxTrivia[] GetFileHeader()
    {
        string headerText = @$"
        //------------------------------------------------------------------------------
        // <auto-generated>
        // Generated using NetDaemon CodeGenerator nd-codegen v{GeneratorVersion}
        //
        // *** Make sure the version of the codegen tool and your nugets Joysoftware.NetDaemon.* have the same version.***
        // You can use following command to keep it up to date with the latest version:
        //   dotnet tool update JoySoftware.NetDaemon.HassModel.CodeGen
        //
        // To update this file with latest entities run this command in your project directory: 
        //   dotnet tool run nd-codegen
        //
        // In the template projects we provided a convenience powershell script that will update
        // the codegen and nugets to latest versions update_all_dependencies.ps1.
        //
        // For more information: https://netdaemon.xyz/docs/v3/hass_model/hass_model_codegen
        // For more information about NetDaemon: https://netdaemon.xyz/  
        // </auto-generated>
        //------------------------------------------------------------------------------";

        var lines = headerText.Split('\n', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);

        SyntaxTrivia[] header = lines.SelectMany(l => new[] { Comment(l), LineFeed }).ToArray();
        return header;
    }
}